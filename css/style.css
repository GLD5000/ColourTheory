*, *::after, *::before {
  font-family: "Bebas Neue", cursive;
}

/* Dynamic Sizing */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  height: 100vh;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*, *::after, *::before {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  box-shadow: none;
  border: none;
}

:root {
  background: #000;
  box-shadow: none;
  border: none;
  outline: none;
}

li, ol, ul {
  list-style: none;
}

h1 {
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6 * 1.6);
}

p, li, ol, ul {
  font-weight: 500;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
  font-family: "Montserrat", sans-serif;
}

.primary-wrapper {
  background-color: #e68f75;
}

.monochromeA-wrapper {
  background-color: #de6c4a;
}

.monochromeB-wrapper {
  background-color: #eeb2a0;
}

.analogousA-wrapper {
  background-color: #e67593;
}

.analogousB-wrapper {
  background-color: #e6c875;
}

.triadicA-wrapper {
  background-color: #8f75e6;
}

.triadicB-wrapper {
  background-color: #75e68f;
}

.tetradicA-wrapper {
  background-color: #93e675;
}

.tetradicB-wrapper {
  background-color: #75cce6;
}

.tetradicC-wrapper {
  background-color: #c875e6;
}

.neutral-wrapper {
  background-color: #adadad;
}

.header, .footer {
  display: relative;
  color: #fff;
}

.footer {
  border-top: #fff solid 4px;
  background-color: #000;
}

.header {
  background-color: #e68f75;
  border-bottom: solid #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  display: grid;
  grid-template-columns: inherit;
  grid-template-rows: 1fr;
  padding-left: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.5);
  padding-right: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.5);
}

.header-content {
  grid-column: 2;
  display: flex;
  flex-basis: 50% 10% 10%;
  gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.75);
  justify-content: space-between;
}

.header-content > * {
  display: block;
}

.title {
  font-family: "Bebas Neue", cursive;
  color: #000;
  flex-basis: 1;
  text-shadow: 1px 1px #fff;
  font-weight: 900;
}

.btn, .textmode {
  white-space: normal;
  align-items: center;
  border: none;
  cursor: pointer;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
  background-color: hsl(0deg, 0%, 83.9%);
}

.copy-single {
  cursor: copy;
}

.textmode {
  position: relative;
  display: block;
}

.textmode::before {
  position: absolute;
  width: 100%;
  height: 100%;
  line-height: normal;
  content: attr(data-content);
  align-items: center;
  text-align: center;
  margin: 0;
}

.btn-small {
  flex: 1 1 50%;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
}

.btn-dual, .textmode {
  flex: 1 1 50%;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
}

.btn-tiny {
  flex: 1 1 25%;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
}

.dice {
  align-items: center;
  width: 100%;
  border: none;
  background: linear-gradient(to right, hsl(0deg, 70%, 70%), hsl(60deg, 70%, 70%), hsl(120deg, 70%, 70%), hsl(180deg, 70%, 70%), hsl(240deg, 70%, 70%), hsl(300deg, 70%, 70%), hsl(0deg, 70%, 70%));
  display: flex;
  /*grid-template:20px 1fr 20px / 20px 1fr 20px 1fr 20px;
  cursor:default;*/
}

.dieA {
  transform: rotateZ(-2deg);
}

.dieB {
  transform: rotateZ(1deg);
}

.dieA, .dieB {
  border: solid #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  box-shadow: #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) 0px;
  background-color: hsl(0deg, 0%, 55.7%);
  display: grid;
  grid-template: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) repeat(3, 1fr) calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25)/calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) repeat(3, 1fr) calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25);
  min-height: calc(2.5 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
  max-width: 40%;
  margin: auto;
  aspect-ratio: 1/1;
  -webkit-backface-visibility: hidden;
  /* Safari */
  backface-visibility: hidden;
}

.dots {
  background-color: #fff;
  border: solid #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  border-radius: 50%;
}

.dotA, .dotD {
  grid-area: 2/2;
}

.dotB {
  grid-area: 3/3;
}

.dotC, .dotG {
  grid-area: 4/4;
}

.dotE {
  grid-area: 2/4;
}

.dotF {
  grid-area: 4/2;
}

.btn:focus-within, .textmode:focus-within {
  outline: none;
  background-color: #000;
  color: #fff;
}

.btn:hover, .textmode:hover {
  outline: none;
  color: #fff;
  background-color: hsl(0deg, 0%, 55.7%);
}

.swatch-palette {
  width: 100%;
  display: grid;
  gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.75);
  padding: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.5);
}

.primary-picker {
  width: 100%;
  display: grid;
  grid-template: 1fr 11fr/1fr;
  gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
}

.slider-container {
  width: 100%;
  display: flex;
  flex-basis: 100% 100% 100%;
  gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  padding: 1px 2px 2px 1px;
}

.swatch, .btn-container, .primary-swatch {
  position: relative;
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-columns: 1fr;
  row-gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  background-color: hsl(0deg, 0%, 23.1%);
  border: solid #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
  box-shadow: #000 calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25) 0px;
  cursor: pointer;
  overflow: hidden;
  margin: auto;
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6);
}

.swatch, .btn-container {
  grid-template-rows: 1fr calc(1.25 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
}

.primary-swatch {
  grid-template-rows: calc(1.25 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem)) 1fr calc(1.25 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
}

.btn-random::after {
  position: absolute;
  top: 1rem;
  width: 100%;
  height: 100%;
}

.picker-wrapper {
  position: relative;
  color: black;
}

.primary-wrapper:hover, .picker-wrapper:hover {
  border: solid 2px hsl(0deg, 0%, 55.7%);
}

.primary-wrapper:focus-within, .picker-wrapper:focus-within {
  border: solid 4px white;
}

.picker-wrapper::before {
  content: attr(data-content);
  position: absolute;
  text-align: center;
  top: 1rem;
  width: 100%;
  line-height: 90%;
}

.picker-wrapper::after {
  content: attr(data-rating);
  position: absolute;
  text-align: center;
  left: 3px;
  bottom: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.25);
  width: 100%;
  line-height: 90%;
  font-family: "Montserrat", sans-serif, sans-serif;
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.625);
  font-weight: 500;
}

.primary-wrapper {
  position: relative;
}

.primary-wrapper::before {
  content: attr(name);
  position: absolute;
  text-align: center;
  left: 0;
  top: calc(1.25 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
  width: 100%;
  line-height: 90%;
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6 * 1.6);
}

.primary-wrapper::after {
  content: attr(data-content);
  position: absolute;
  text-align: center;
  left: 0;
  top: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6 * 1.6 * 1.6);
  width: 100%;
  line-height: 90%;
  font-family: "Montserrat", sans-serif, sans-serif;
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.625);
  font-weight: 500;
}

.flexbox-horizontal-btn {
  display: flex;
  gap: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 0.125);
}

.flexbox-clipboard {
  display: flex;
  width: 100%;
  overflow: auto;
}

.clipboard, .clipboard-secondary {
  display: flex;
  height: fit-content;
  width: fit-content;
  font-family: "Source Code Pro", monospace, "Courier New", Courier, monospace;
  font-size: calc(0.65 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
  font-weight: 500;
  padding: 0.25em;
  cursor: pointer;
  white-space: pre;
  align-items: center;
  line-height: 1.125;
}

.clipboard {
  position: relative;
  color: #9cdcfe;
}

/*
.clipboard::after{
  position:absolute;
  top:0;
  left:0; 
  content: attr(data-content);
  color: $vscode-blue;
}
*/
.large-picker, .btn-container {
  font-size: calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6 * 1.6);
}

.picker {
  opacity: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  border: none;
  outline: none;
  -webkit-appearance: none;
}

.slider {
  position: relative;
  opacity: 100%;
  width: 100%;
  height: 100%;
  cursor: ew-resize;
  outline: none;
  -webkit-appearance: none;
  grid-row: 1/span 1;
}

input[type=range]::-webkit-slider-thumb {
  opacity: 0%;
}

input[type=range]::-ms-thumb {
  opacity: 0;
}

input[type=range]::-moz-range-thumb {
  opacity: 0;
}

input[name=hue] {
  background: linear-gradient(to right, hsl(0deg, 70%, 70%), hsl(60deg, 70%, 70%), hsl(120deg, 70%, 70%), hsl(180deg, 70%, 70%), hsl(240deg, 70%, 70%), hsl(300deg, 70%, 70%), hsl(0deg, 70%, 70%));
}

input[name=lum] {
  background: linear-gradient(to left, #fff, #555);
}

input[name=sat] {
  background: linear-gradient(to right, hsl(0deg, 0%, 70%), hsl(60deg, 10%, 70%), hsl(120deg, 20%, 70%), hsl(180deg, 40%, 70%), hsl(240deg, 80%, 70%), hsl(300deg, 100%, 70%), hsl(0deg, 100%, 70%));
}

input[name=red] {
  background: linear-gradient(to right, #777, #d00);
}

input[name=green] {
  background: linear-gradient(to right, #777, #0d0);
}

input[name=blue] {
  background: linear-gradient(to right, #777, #00d);
}

input[name=tint] {
  background: linear-gradient(to right, #d00, #0d0);
}

input[name=warmth] {
  background: linear-gradient(to left, #dd0, #00d);
}

input[name=lightness] {
  background: linear-gradient(to left, #fff, #555);
}

input[type=range]:focus, input[type=range]:hover {
  border: solid 2px #fff;
}

input[type=range]:hover::before {
  padding: 0;
  content: attr(name);
  position: absolute;
  text-align: center;
  width: 100%;
  height: 100%;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
  line-height: 120%;
  color: #fff;
}

input[type=range]:focus::before {
  padding: 0;
  content: attr(name);
  position: absolute;
  text-align: center;
  width: 100%;
  height: 100%;
  font-size: clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem);
  line-height: 120%;
  color: #000;
}

/* Grid areas */
.header {
  grid-area: header;
}

.swatch-palette {
  grid-area: palette;
}

.footer {
  grid-area: footer;
}

.body-grid {
  background: linear-gradient(to bottom right, hsl(0deg, 0%, 55.7%), hsl(0deg, 0%, 41.2%));
  position: relative;
  top: 0;
  left: 0;
  height: 100vh;
  width: clamp(270px, 100vw, 170em);
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-template: "header header header" calc(clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem) * 1.6 * 1.6) ". palette ." 1fr "footer footer footer" clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem)/1em 1fr 1em;
}

/*
Grid level 2 areas
*/
.primary-swatch {
  grid-area: picker;
}

.monochromeA {
  grid-area: monochromeA;
}

.monochromeB {
  grid-area: monochromeB;
}

.analogousA {
  grid-area: analogousA;
}

.analogousB {
  grid-area: analogousB;
}

.triadicA {
  grid-area: triadicA;
}

.triadicB {
  grid-area: triadicB;
}

.tetradicA {
  grid-area: tetradicA;
}

.tetradicB {
  grid-area: tetradicB;
}

.tetradicC {
  grid-area: tetradicC;
}

.neutral {
  grid-area: neutral;
}

.btn-copy {
  grid-area: copyAll;
}

.btn-random {
  grid-area: random;
}

/*.clipboard{
    grid-area: clipboard;
}


$picker-height-tiny: 24em;
$swatch-height-tiny: 12em;

$picker-height-small: 16em;
$swatch-height-small: 8em;

$picker-height-medium: 16em;
$swatch-height-medium: 12em;

$picker-height-large: 32em;
$swatch-height-large: 16em;
*/
.swatch-palette {
  overflow-y: auto;
  grid-auto-rows: calc(5.4 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem));
  grid-auto-columns: 1fr;
}

@media all and (min-width: 0px) {
  .swatch-palette {
    grid-template-areas: "picker" "picker" "monochromeA" "monochromeB" "analogousA" "analogousB" "triadicA" "triadicB" "tetradicA" "tetradicB" "tetradicC" "neutral" "copyAll" "random";
  }
}
@media all and (min-width: 37.5em) {
  .swatch-palette {
    grid-template-areas: "picker picker" "picker picker" "monochromeA monochromeB" "analogousA analogousB" "triadicA triadicB" "tetradicA tetradicB" "tetradicC neutral" "copyAll copyAll" "random random";
  }
}
@media all and (min-width: 60em) {
  .swatch-palette {
    grid-template-areas: "picker picker picker picker" "picker picker picker picker" "monochromeA monochromeB analogousA analogousB" "tetradicA tetradicB tetradicC neutral" "triadicA triadicB copyAll random";
    grid-auto-rows: minmax(calc(5 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem)), 1fr);
  }
}
@media all and (min-width: 80em) {
  .swatch-palette {
    grid-template-areas: "picker picker monochromeA monochromeB" "picker picker analogousA analogousB" "neutral  neutral  triadicA triadicB" "tetradicA tetradicB tetradicB tetradicC " "random random copyAll copyAll";
    grid-auto-rows: minmax(calc(5 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem)), 1fr);
  }
}
@media all and (min-width: 120em) {
  .swatch-palette {
    grid-template-areas: "monochromeA monochromeB picker picker triadicA triadicB" "analogousA analogousB picker picker tetradicA tetradicC" "copyAll copyAll neutral random  tetradicB tetradicB";
    grid-auto-rows: minmax(calc(5 * clamp(1rem, 0.6707920792rem + 1.3861386139vw, 2.75rem)), 1fr);
  }
}

/*# sourceMappingURL=style.css.map */
